{"version":3,"sources":["assets/yo.png","pages/Home.js","App.js","http/queryApi.js","pages/Details.js","components/SearchForm.js","components/MovieList.js","pages/Search.js","Movie.js","reportWebVitals.js","index.js"],"names":["Home","className","src","me","alt","href","App","REACT_APP_APIKEY","process","searchMovie","title","page","a","fetch","json","resultQuery","Search","detailsMovie","idDeIMDB","Details","useState","infoMovie","setInfoMovie","imdbID","useRouteMatch","useParams","console","log","useEffect","resultInfoMovie","getInfoMovie","to","Title","Poster","Year","Plot","Writer","Ratings","map","rating","index","Source","Value","SearchForm","props","text","setText","sendText","startSearching","goNextPage","seeNextPage","goBeforePage","seeBeforePage","onClick","onSubmit","event","preventDefault","target","value","onChange","name","type","MovieList","movies","history","movieDetails","useHistory","movie","push","Type","toUpperCase","listOfMovies","setListOfMovies","setPage","match","queryResult","searchMovieResult","textfromForm","Movie","activeClassName","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c62aa128.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/yo.c0089ef8.png\";","import './home.css';\nimport me from '../assets/yo.png';\n\nfunction Home() {\n  return (\n    <div className=\"homeContainer\">\n      <h1>Bienvenido al buscador de pelis \"Juugle \"</h1>\n      <div className=\"description\">\n        <div>\n          <img src={me} alt=\"Julián Calle\" />\n        </div>\n\n        <p>\n          Es muy simple va a la sección \"Search\" y podras buscar películas por su título. Vamos que la mecánica es\n          fácil. Este esta es una prueba del primer uso de ReactJS. En este ejemplo se han implemtentado los hooks\n          básicos (useState y useEffect). Como fuente información se uso la API de películas y series{' '}\n          <a href=\"http://www.omdbapi.com/\">omdbapi</a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Title from './components/Title';\n\nfunction App() {\n  return (\n    <Router>\n      <Title></Title>\n      <Switch>\n        <Route path=\"/\">\n          <Home></Home>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const { REACT_APP_APIKEY } = process.env;\n\nexport async function searchMovie(title, page) {\n  const resultQuery = await (\n    await fetch(`http://www.omdbapi.com/?s=${title}&apikey=${REACT_APP_APIKEY}&page=${page}`)\n  ).json();\n  return resultQuery.Search;\n}\n\nexport async function detailsMovie(idDeIMDB) {\n  const resultQuery = await (await fetch(`http://www.omdbapi.com/?i=${idDeIMDB}&apikey=${REACT_APP_APIKEY}`)).json();\n\n  return resultQuery;\n}\n","import { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from 'react-router-dom';\nimport { detailsMovie } from '../http/queryApi';\nimport { useState, useEffect } from 'react';\nimport './details.css';\nfunction Details() {\n  const [infoMovie, setInfoMovie] = useState({});\n  const match = useRouteMatch();\n\n  let { imdbID } = useParams();\n  console.log(infoMovie);\n  useEffect(() => {\n    const getInfoMovie = async () => {\n      const resultInfoMovie = await detailsMovie(imdbID);\n      console.log(resultInfoMovie);\n      setInfoMovie(resultInfoMovie);\n    };\n    getInfoMovie();\n  }, []);\n  // Genre\n\n  return (\n    <div className=\"detailsContainer\">\n      <Link className=\"detailsLink\" to=\"/search\">\n        Volver a busqueda\n      </Link>\n      <div className=\"detailsView\">\n        <div className=\"posterDetails\">\n          <h1>Detalles de: {infoMovie.Title}</h1>\n          <div className=\"asideMovie\">\n            <div className=\"imgPoster\">\n              <img src={infoMovie.Poster} alt={infoMovie.Title} />\n            </div>\n\n            <div className=\"infofoMovie\">\n              <h2>Año de proyección: {infoMovie.Year}</h2>\n              <h2>Argumento</h2>\n              <p>{infoMovie.Plot}</p>\n              <h2>Escritor</h2>\n              <p>{infoMovie.Writer}</p>\n              <h2>Ratings</h2>\n              <ul className=\"ratings\">\n                {infoMovie.Ratings?.map((rating, index) => {\n                  return (\n                    <h4>\n                      <li>\n                        {rating.Source}: {rating.Value}\n                      </li>\n                    </h4>\n                  );\n                })}\n              </ul>\n              {/* {console.log(infoMovie.Ratings[0].Source)} */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Link className=\"detailsLink\" to=\"/search\">\n        Volver a busqueda\n      </Link>\n    </div>\n  );\n}\n\nexport default Details;\n","import { useState } from 'react';\nimport './searchForm.css';\nexport default function SearchForm(props) {\n  const [text, setText] = useState('');\n\n  const sendText = props.startSearching;\n  const goNextPage = props.seeNextPage;\n  const goBeforePage = props.seeBeforePage;\n\n  function updateInput(event) {\n    setText(event.target.value);\n  }\n\n  function submitForm(event) {\n    event.preventDefault();\n    setText(event.target.value);\n    console.log('Buscando:', text);\n    setText('');\n    sendText(text);\n  }\n\n  return (\n    <div className=\"searchForm\">\n      <button onClick={goBeforePage}>Previous page</button>\n      <button onClick={goNextPage}>Next page</button>\n      <form onSubmit={submitForm}>\n        <input onChange={updateInput} value={text} name=\"search\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n","import { useHistory } from 'react-router-dom';\nimport './movieList.css';\nfunction MovieList(props) {\n  const { movies } = props;\n  const movieInfo = props.movieDetails;\n\n  const history = useHistory();\n  function movieDetails(imdbID) {\n    console.log('Detalles');\n    history.push(`/details/${imdbID}`);\n  }\n  // onClick={movieInfo}\n  return (\n    <div className=\"listMovies\">\n      {movies &&\n        movies.map((movie, index) => {\n          return (\n            <div\n              key={movie.imdbID}\n              className=\"movie\"\n              onClick={() => {\n                movieDetails(movie.imdbID);\n              }}\n            >\n              <div className=\"poster\">\n                <h1>{movie.Title}</h1>\n                <img src={movie.Poster} alt={movie.Title} />\n              </div>\n              <h2>{movie.Type.toUpperCase()}</h2>\n              <h2>{`ID: ${movie.imdbID}`}</h2>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import { useRouteMatch, useParams } from 'react-router-dom';\n// import searchMovie from '../http/queryApi';\nimport { useEffect, useState } from 'react';\nimport SearchForm from '../components/SearchForm';\nimport MovieList from '../components/MovieList';\nimport { searchMovie } from '../http/queryApi';\n\n// `http://www.omdbapi.com/?s=${stringDelInput}&apikey=${apiKey}`\n// `http://www.omdbapi.com/?i=${idDeIMDB}&apikey=${apiKey}`\n\nexport default function Search() {\n  const [text, setText] = useState('');\n  const [listOfMovies, setListOfMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  console.log(useParams());\n\n  const match = useRouteMatch();\n  console.log(match);\n  function startSearching(textfromForm) {\n    setText(textfromForm);\n  }\n\n  function seeNextPage() {\n    setPage(page + 1);\n  }\n\n  function seeBeforePage() {\n    setPage(page - 1);\n  }\n  useEffect(() => {\n    const searchMovieResult = async () => {\n      if (text !== '') {\n        const queryResult = await searchMovie(text, page);\n        setListOfMovies(queryResult);\n      }\n    };\n    searchMovieResult();\n  }, [page, text]);\n  console.log(text);\n  console.log(listOfMovies);\n  return (\n    <div className=\"searchContainer\">\n      <h1>SearchMovie</h1>\n\n      <SearchForm startSearching={startSearching} seeNextPage={seeNextPage} seeBeforePage={seeBeforePage} />\n      <MovieList movies={listOfMovies} />\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Route, NavLink, Link, Switch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Details from './pages/Details';\nimport Home from './pages/Home';\nimport Search from './pages/Search';\nimport './Movie.css';\n// `http://www.omdbapi.com/?s=${stringDelInput}&apikey=${apiKey}`\n// `http://www.omdbapi.com/?i=${idDeIMDB}&apikey=${apiKey}`\n\nexport default function Movie() {\n  // const [scrollpos, setScrollpos] = useState(0);\n\n  // useEffect(() => {\n  //   const screenScroll = window.pageYOffset;\n  //   const navBar = document.querySelector('.navigationBar');\n  //   const nabBarTopOffset = navBar.offsetTop;\n  //   console.log(screenScroll);\n  //   console.log(nabBarTopOffset);\n  //   if (screenScroll > nabBarTopOffset) {\n  //     navBar.classList.add('stickyHeader');\n  //   } else {\n  //     navBar.classList.remove('stickyHeader');\n  //   }\n  // }, [scrollpos]);\n\n  // function wheel(e) {\n  //   const scrollpos = e.pageY;\n\n  //   setScrollpos(scrollpos);\n  // }\n  // onWheel={wheel}\n\n  return (\n    <main>\n      <Router>\n        <ul className=\"navigationBar test\">\n          <li>\n            <NavLink to=\"/\" activeClassName=\"selected\">\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/search\" activeClassName=\"selected\">\n              Search\n            </NavLink>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/search\">\n            <Search />\n          </Route>\n          <Route exact path=\"/details/:imdbID\">\n            <Details />\n          </Route>\n        </Switch>\n      </Router>\n    </main>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Movie from './Movie';\nimport reportWebVitals from './reportWebVitals';\nimport Test from './Test';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n\n    <Movie />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}